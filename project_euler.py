class ProjectEuler:

    def problem_one(self, n):
        """
        If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23. Find the sum of all the multiples of 3 or 5 below 1000.
        """
        # set initial numbers
        i = 0
        answer = 0
        # as long as i is below N (10, 1000, etc)
        # if it's divisible by 3 or 5
        # add that number with the answer
        while i < n:
            if i % 3 == 0 or i % 5 == 0:
                answer += i
            i += 1

        return answer
    
    def problem_two(self):
        """
        Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
        
        1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
        
        By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
        """
        fibonacci = [0, 1]
        while fibonacci[-1] < 4000000:
            fibonacci.append(fibonacci[-2] + fibonacci[-1])
            
        even = [x for x in fibonacci if x % 2 == 0]
        
        return sum(even)

